{"version":3,"sources":["Loading.js","App.js","reportWebVitals.js","index.js"],"names":["LoadingComponent","className","WelcomePage","React","lazy","SnipcartButtonGenerator","JsRedirectCodeGenerator","JSCodeForTimestampGenerator","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","textAlign","maxWidth","linkText","color","App","props","window","classes","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","name","path","map","item","index","to","ListItem","button","ListItemText","primary","container","undefined","document","body","basename","Suspense","fallback","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.759113b0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoadingComponent=() => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\nexport default LoadingComponent;\n","import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Hidden from '@material-ui/core/Hidden';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport LoadingComponent from './Loading'\nconst WelcomePage = React.lazy(()=>import('./WelcomePage'))\nconst SnipcartButtonGenerator = React.lazy(()=>import('./tool/SnipcartButtonGenerator'))\nconst JsRedirectCodeGenerator = React.lazy(()=>import('./tool/JsRedirectCodeGenerator'))\nconst BootstrapLoadingIconGenerator = React.lazy(()=>import('./tool/BootstrapLoadingIconGenerator'))\nconst JSCodeForTimestampGenerator = React.lazy(()=>import('./tool/Timestamp'))\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        textAlign: 'center',\n        maxWidth:'1200px'\n    },\n    linkText:{\n        color: \"#5b4a4a\",\n        \"text-decoration\": 'none'\n    }\n}));\n\nfunction App(props) {\n    const {window} = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    const drawer = (\n        <div>\n            <div className={classes.toolbar}/>\n            <Divider/>\n            <List>\n                {[\n                    {name: \"Home\", path: \"/\"},\n                    // {name: \"Snipcart Cart Button Generator\", path: \"/snipcart-button-generator\"},\n                    {name: \"JS Redirect Code Generator\", path: \"/js-redirect-code-generator\"},\n                    // {name: \"Bootstrap Loading Icon Generator\", path: \"/bootstrap-loading-icon-generator\"},\n                    {name:\"Timestamp\",path: '/timestamp'}\n                ].map((item, index) => (\n                    <Link className={classes.linkText} to={item.path}>\n                        <ListItem button key={item.name}>\n                            <ListItemText primary={item.name}/>\n                        </ListItem>\n                    </Link>\n                ))}\n            </List>\n        </div>\n    );\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <Router basename='/'>\n                <React.Suspense fallback={LoadingComponent()}>\n                    <CssBaseline/>\n                    <AppBar position=\"fixed\" className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                edge=\"start\"\n                                onClick={handleDrawerToggle}\n                                className={classes.menuButton}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" noWrap>\n                                My Simple Tools\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n\n                    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                        <Hidden smUp implementation=\"css\">\n                            <Drawer\n                                container={container}\n                                variant=\"temporary\"\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                                open={mobileOpen}\n                                onClose={handleDrawerToggle}\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                                ModalProps={{\n                                    keepMounted: true, // Better open performance on mobile.\n                                }}\n                            >\n                                {drawer}\n                            </Drawer>\n                        </Hidden>\n                        <Hidden xsDown implementation=\"css\">\n                            <Drawer\n                                classes={{\n                                    paper: classes.drawerPaper,\n                                }}\n                                variant=\"permanent\"\n                                open\n                            >\n                                {drawer}\n                            </Drawer>\n                        </Hidden>\n                    </nav>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar}/>\n                        <Switch>\n                            <Route path=\"/js-redirect-code-generator\" component={JsRedirectCodeGenerator}/>\n                            {/*<Route path=\"/bootstrap-loading-icon-generator\">*/}\n                            {/*    <BootstrapLoadingIconGenerator/>*/}\n                            {/*</Route>*/}\n                            <Route path=\"/snipcart-button-generator\">\n                                <SnipcartButtonGenerator/>\n                            </Route>\n                            <Route path=\"/timestamp\">\n                                <JSCodeForTimestampGenerator/>\n                            </Route>\n                            <Route exact path=\"/\" component={WelcomePage}/>\n                        </Switch>\n                    </main>\n                </React.Suspense>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}